version: '3.8'

services:
  # PostgreSQL with pgvector for similarity search
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: video_search
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # MinIO as S3-compatible storage for development
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  # Transcode Service
  transcode-service:
    build:
      context: ./services/transcode
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
    volumes:
      - /tmp:/tmp
    depends_on:
      - postgres
      - redis
      - minio

  # Sampler Service
  sampler-service:
    build:
      context: ./services/sampler
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
    depends_on:
      - postgres
      - redis
      - minio

  # OCR Worker Service
  ocr-worker:
    build:
      context: ./services/ocr-worker
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
    depends_on:
      - postgres
      - redis
      - minio

  # Segment Index Service
  segment-indexer:
    build:
      context: ./services/segment-indexer
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
    depends_on:
      - postgres
      - redis
      - minio

  # Clip Service
  clip-service:
    build:
      context: ./services/clip-service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
    ports:
      - "8083:8000"
    depends_on:
      - postgres
      - redis
      - minio

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/video_search
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin123
      - S3_BUCKET=video-bucket
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8000"
    depends_on:
      - postgres
      - redis
      - minio

volumes:
  postgres_data:
  redis_data:
  minio_data:



