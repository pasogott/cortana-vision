version: "3.9"

services:
  # -------------------------------------------------
  # API SERVICE (Main FastAPI app)
  # -------------------------------------------------
  api-service:
    build: ./cortana-api-service
    container_name: cortana-api
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./cortana-api-service/app:/app/app
      - ./uploads:/app/uploads
      - ./data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=sqlite:////app/data/snapshot.db
      - REDIS_URL=redis://cortana-redis:6379/0
    depends_on:
      - redis
    networks:
      - cortana-net
    command: >
      bash -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # -------------------------------------------------
  # SAMPLER SERVICE (extracts frames)
  # -------------------------------------------------
  sampler-service:
    build: ./cortana-sampler-service
    container_name: cortana-sampler
    restart: always
    env_file:
      - .env
    volumes:
      - ./cortana-sampler-service/app:/app/app
      - ./uploads:/app/uploads
      - ./data:/app/data
    environment:
      - DATABASE_URL=sqlite:////app/data/snapshot.db
      - REDIS_URL=redis://cortana-redis:6379/0
      - JOBS_CHANNEL=cortana-jobs
      - EVENT_SAMPLES=make-samples-from-video
      - EVENT_GREYSCALE=make-greyscale-from-samples
      - SAMPLE_THRESHOLD=0.08
      - TMP_DIR=/app/tmp
      - MODE=dev
    depends_on:
      - redis
      - api-service
    networks:
      - cortana-net
    command: >
      bash -c "if [ \"$MODE\" = 'dev' ]; then
                 watchfiles 'python -m app.main' /app/app --verbose;
               else
                 python -m app.main;
               fi"

  # -------------------------------------------------
  # GREYSCALE SERVICE (makes greyscale frames)
  # -------------------------------------------------
  greyscale-service:
    build: ./cortana-greyscale-service
    container_name: cortana-greyscale
    restart: always
    env_file:
      - .env
    volumes:
      - ./cortana-greyscale-service/app:/app/app
      - ./uploads:/app/uploads
      - ./data:/app/data
    environment:
      - DATABASE_URL=sqlite:////app/data/snapshot.db
      - REDIS_URL=redis://cortana-redis:6379/0
      - JOBS_CHANNEL=cortana-jobs
      - EVENT_GREYSCALE=make-greyscale-from-samples
      - EVENT_OCR=run-ocr-from-greyscaled-samples
      - TMP_DIR=/app/tmp
    depends_on:
      - redis
      - api-service
    networks:
      - cortana-net
    command: >
      bash -c "python -m app.main"

   # -------------------------------------------------
  # OCR SERVICE (runs OCR on greyscale frames)
  # -------------------------------------------------   
  ocr-service:
    build: ./cortana-ocr-service
    container_name: cortana-ocr
    restart: always
    env_file:
      - ./cortana-ocr-service/.env
    volumes:
      - ./cortana-ocr-service/app:/app/app
      - ./uploads:/app/uploads
      - ./data:/app/data
    depends_on:
      - redis
      - api-service
      - greyscale-service
    networks:
      - cortana-net
    command: >
      bash -c "python -m app.main"

  # -------------------------------------------------
  # SEARCH SERVICE (text indexing and search)
  # -------------------------------------------------
  search-service:
    build: ./cortana-search-service
    container_name: cortana-search
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - ./cortana-search-service/.env
    volumes:
      - ./cortana-search-service/app:/app/app
      - ./data:/app/data
    depends_on:
      - redis
      - ocr-service
    networks:
      - cortana-net



  # -------------------------------------------------
  # REDIS (Message broker)
  # -------------------------------------------------
  redis:
    image: redis:7
    container_name: cortana-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cortana-net

# -------------------------------------------------
# NETWORKS & VOLUMES
# -------------------------------------------------
networks:
  cortana-net:
    driver: bridge

volumes:
  redis-data:
