name: api-gateway â€¢ build & push

on:
    push:
        branches: [production, development]
        paths:
            - "services/api-gateway/**"
            - ".github/workflows/api-gateway.yml"
    pull_request:
        paths:
            - "services/api-gateway/**"
    workflow_dispatch: {}

env:
    IMAGE_NAME: ghcr.io/${{ github.repository }}-api-gateway

permissions:
    contents: read
    packages: write
    id-token: write

concurrency:
    group: api-gateway-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"
            - name: Install uv
              run: pipx install uv
            - name: Test (unit)
              working-directory: services/api-gateway
              run: |
                  uv sync
                  uv run pytest -q

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.IMAGE_NAME }}
                  tags: |
                      type=sha,prefix=sha-,format=long
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      # also publish "latest" for main
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build & push
              uses: docker/build-push-action@v6
              with:
                  context: services/api-gateway
                  file: services/api-gateway/Dockerfile
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false

            - name: Summarize
              if: ${{ github.event_name != 'pull_request' }}
              run: |
                  echo "Pushed image tags:"
                  echo '${{ steps.meta.outputs.tags }}' | tr ' ' '\n'
